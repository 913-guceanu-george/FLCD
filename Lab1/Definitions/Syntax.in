<relation> ::= < | > | == | <= | >=
<operation> ::=  + | - | * | /
<type> ::= int|char|string
<letter> ::= a|b|...|z|A|B|...|Z
<digit> ::= 0|1|...|9
<character> ::= <letter>|<digit>
<string> ::= <character>|<character><string>
<sign> ::= + | -
<number> ::= <digit>|<digit><number>
<number_constant> ::= <number>|<sign><number>

<l_d> ::= <letter>|<digit>
<identifier> ::== <letter>|<letter><l_d>|<identifier><l_d>
<id_eq> ::= <identifier> =
<id_or_val> ::= <identifier>|<value>
<condition> ::= <id_or_val><relation><id_or_val>
<value> ::= <character>|<string>|<number>|<number_constant>
<a_e> ::= <id_or_val><operation><id_or_val>
<arithemtical_expression> ::= a_e|(<a_e>)|((<a_e>)<operation><arithemtical_expression>)


<declaration_stmt> ::= var<identifier>:<type>

<array_declaration_stmt> ::= <declaration_stmt>[<identifier>]|<declaration_stmt>[<number>]

<assign_stmt> ::= <id_eq><id_or_val>|<id_eq><arithemtical_expression>

<if_stmt> ::= if(<condition>){<stmt_list>}else{<stmt_list>}

<io_stmt> ::= ConsoleRead(<identifier>)|ConsoleWrite(<id_or_val>)

<while_stmt> ::= while(<condition>){<stmt_list>}

<empty_stmt> ::=

<stmt> ::= <declaration_stmt>;|<array_declaration_stmt>;|<assign_stmt>;|<io_stmt>;|<while_stmt>;

<stmt_list> ::= <empty_stmt>|<stmt>|<stmt><stmt_list>
<program> ::= BEGIN;<stmt_list>END;